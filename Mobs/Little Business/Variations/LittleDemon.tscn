[gd_scene load_steps=5 format=2]

[ext_resource path="res://Mobs/Little Business/LittleMan.tscn" type="PackedScene" id=1]
[ext_resource path="res://Mobs/Little Business/Variations/demonBusiness.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 flash_col : hint_color = vec4(1.0);
uniform float flash : hint_range(0.0, 1.0) = 0.0;
uniform vec4 line_color : hint_color = vec4(1.0);
uniform float line_width = 1.0;
uniform vec2 spritesheet_size = vec2(1.0);

void vertex() {
	VERTEX += sign(VERTEX) * line_width;
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, vec2 image_top_left, vec2 image_bottom_right, sampler2D texture) {
	for (float i = -ceil(line_width); i <= ceil(line_width); i++) {
		float x = abs(i) > line_width ? line_width * sign(i) : i;
		float offset = line_width - abs(x);
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, image_top_left, image_bottom_right) || texture(texture, xy).a <= 0.0) == false) {
				return true;
			}
		}
	}
	return false;
}

void fragment() {
	// Thanks Juulpower
	vec2 uv = UV;
	vec2 image_top_left = floor(uv * spritesheet_size) / spritesheet_size;
	vec2 image_bottom_right = image_top_left + vec2(1.0) / spritesheet_size;
	
	vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(line_width * 2.0) * spritesheet_size);
	uv = (uv - texture_pixel_size * line_width - image_top_left) * TEXTURE_PIXEL_SIZE / texture_pixel_size + image_top_left;
	if (uv != clamp(uv, image_top_left, image_bottom_right)) {
		COLOR.a = 0.0;
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	if ((COLOR.a > 0.0) == false && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, image_top_left, image_bottom_right, TEXTURE)) {
		COLOR.rgb = mix(COLOR.rgb, line_color.rgb, line_color.a);
		COLOR.a += (1.0 - COLOR.a) * line_color.a;
	}
	
	COLOR.rgb = mix(COLOR.rgb, flash_col.rgb, flash);
}

"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/flash_col = Color( 1, 1, 1, 1 )
shader_param/flash = 0.0
shader_param/line_color = Color( 1, 1, 1, 0 )
shader_param/line_width = 1.0
shader_param/spritesheet_size = Vector2( 16, 1 )

[node name="LittleDemon" instance=ExtResource( 1 )]
max_health = 460.0
base_speed = 12.0
path_deviation = 10.0
trojan_mode = true
devil_mode = true

[node name="Sprite" parent="." index="0"]
material = SubResource( 2 )
texture = ExtResource( 2 )
hframes = 2
