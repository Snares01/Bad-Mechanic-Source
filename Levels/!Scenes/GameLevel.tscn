[gd_scene load_steps=16 format=2]

[ext_resource path="res://Levels/!Classes/GameController.gd" type="Script" id=1]
[ext_resource path="res://ProceduralGeneration/!Classes/LevelGenerator.tscn" type="PackedScene" id=2]
[ext_resource path="res://Drops/!Classes/DropFlashManager.gd" type="Script" id=3]
[ext_resource path="res://Drops/!Classes/DropManager.gd" type="Script" id=4]
[ext_resource path="res://Interface/Game/GUI.tscn" type="PackedScene" id=5]
[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=6]
[ext_resource path="res://Levels/!Scenes/MobSelector.tscn" type="PackedScene" id=7]
[ext_resource path="res://Levels/!Classes/GameCamera.gd" type="Script" id=8]
[ext_resource path="res://Levels/!Scenes/LevelEndTrigger.tscn" type="PackedScene" id=9]
[ext_resource path="res://Mobs/hit_flash_shader.tres" type="Material" id=10]
[ext_resource path="res://Interface/IntroCutscene/DialogueBox.tscn" type="PackedScene" id=11]
[ext_resource path="res://Interface/IntroCutscene/boss_voice_2.wav" type="AudioStream" id=12]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 flash_col : hint_color = vec4(1.0);
uniform float flash : hint_range(0.0, 1.0) = 0.0;
uniform vec4 line_color : hint_color = vec4(1.0);
uniform float line_width = 1.0;
uniform vec2 spritesheet_size = vec2(1.0);

void vertex() {
	VERTEX += sign(VERTEX) * line_width;
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, vec2 image_top_left, vec2 image_bottom_right, sampler2D texture) {
	for (float i = -ceil(line_width); i <= ceil(line_width); i++) {
		float x = abs(i) > line_width ? line_width * sign(i) : i;
		float offset = line_width - abs(x);
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, image_top_left, image_bottom_right) || texture(texture, xy).a <= 0.0) == false) {
				return true;
			}
		}
	}
	return false;
}

void fragment() {
	// Thanks Juulpower
	vec2 uv = UV;
	vec2 image_top_left = floor(uv * spritesheet_size) / spritesheet_size;
	vec2 image_bottom_right = image_top_left + vec2(1.0) / spritesheet_size;
	
	vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(line_width * 2.0) * spritesheet_size);
	uv = (uv - texture_pixel_size * line_width - image_top_left) * TEXTURE_PIXEL_SIZE / texture_pixel_size + image_top_left;
	if (uv != clamp(uv, image_top_left, image_bottom_right)) {
		COLOR.a = 0.0;
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	if ((COLOR.a > 0.0) == false && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, image_top_left, image_bottom_right, TEXTURE)) {
		COLOR.rgb = mix(COLOR.rgb, line_color.rgb, line_color.a);
		COLOR.a += (1.0 - COLOR.a) * line_color.a;
	}
	
	COLOR.rgb = mix(COLOR.rgb, flash_col.rgb, flash);
}

"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/flash_col = Color( 1, 1, 1, 1 )
shader_param/flash = 0.0
shader_param/line_color = Color( 1, 1, 1, 0 )
shader_param/line_width = 1.0
shader_param/spritesheet_size = Vector2( 10, 1 )

[sub_resource type="AudioStreamRandomPitch" id=4]
audio_stream = ExtResource( 12 )

[node name="GameController" type="Node2D"]
script = ExtResource( 1 )

[node name="LevelGenerator" parent="." instance=ExtResource( 2 )]

[node name="GameObjects" type="YSort" parent="."]
script = ExtResource( 4 )

[node name="Player" parent="GameObjects" instance=ExtResource( 6 )]
material = SubResource( 2 )

[node name="DropFlashManager" type="Node2D" parent="GameObjects"]
material = ExtResource( 10 )
script = ExtResource( 3 )

[node name="MobSelector" parent="." instance=ExtResource( 7 )]

[node name="UILayer" type="CanvasLayer" parent="."]

[node name="GUI" parent="UILayer" instance=ExtResource( 5 )]

[node name="MarginContainer" type="MarginContainer" parent="UILayer"]
visible = false
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 10.0
margin_top = -85.0
margin_right = -10.0
margin_bottom = -10.0
mouse_filter = 1

[node name="PortalDialogue" parent="UILayer/MarginContainer" instance=ExtResource( 11 )]
unique_name_in_owner = true
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 0.0
margin_top = 0.0
margin_right = 300.0
margin_bottom = 75.0
messages = [ "You're alive!?", "I mean-  flip the switch on the back of that portal, champ" ]
speaker = "Boss"
talk_sounds = [ SubResource( 4 ) ]
read_speed = 0.075
auto_start = false
pause = true
allow_type_skip = false

[node name="PostPortalDialogue" parent="UILayer/MarginContainer" instance=ExtResource( 11 )]
unique_name_in_owner = true
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 0.0
margin_top = 0.0
margin_right = 300.0
margin_bottom = 75.0
messages = [ "Now get the hell out of there!" ]
speaker = "Boss"
talk_sounds = [ SubResource( 4 ) ]
read_speed = 0.08
auto_start = false
pause = true
allow_type_skip = false

[node name="Intermission" type="Timer" parent="."]

[node name="Camera" type="Camera2D" parent="."]
current = true
script = ExtResource( 8 )

[node name="LevelEndTrigger" parent="." instance=ExtResource( 9 )]

[connection signal="ready" from="GameObjects/Player" to="." method="_on_Player_ready"]
[connection signal="timeout" from="Intermission" to="." method="_on_Intermission_timeout"]
